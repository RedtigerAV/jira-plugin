/* tslint:disable */

/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


export interface SharePermissionInputBeanModel { 
    /**
     * The type of the share permission.Specify the type as follows:   *  `group` Share with a group. Specify `groupname` as well.  *  `project` Share with a project. Specify `projectId` as well.  *  `projectRole` Share with a project role in a project. Specify `projectId` and `projectRoleId` as well.  *  `global` Share globally, including anonymous users. If set, this type overrides all existing share permissions and must be deleted before any non-global share permissions is set.  *  `authenticated` Share with all logged-in users. This shows as `loggedin` in the response. If set, this type overrides all existing share permissions and must be deleted before any non-global share permissions is set.
     */
    type: SharePermissionInputBeanModel.TypeModelEnum;
    /**
     * The ID of the project to share the filter with. Set `type` to `project`.
     */
    projectId?: string;
    /**
     * The name of the group to share the filter with. Set `type` to `group`.
     */
    groupname?: string;
    /**
     * The ID of the project role to share the filter with. Set `type` to `projectRole` and the `projectId` for the project that the role is in.
     */
    projectRoleId?: string;
}
export namespace SharePermissionInputBeanModel {
    export type TypeModelEnum = 'project' | 'group' | 'projectRole' | 'global' | 'authenticated';
    export const TypeModelEnum = {
        Project: 'project' as TypeModelEnum,
        Group: 'group' as TypeModelEnum,
        ProjectRole: 'projectRole' as TypeModelEnum,
        Global: 'global' as TypeModelEnum,
        Authenticated: 'authenticated' as TypeModelEnum
    };
}

